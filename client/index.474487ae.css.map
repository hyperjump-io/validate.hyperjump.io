{
  "version": 3,
  "file": "index.474487ae.css",
  "sources": [
    "../../../../../../src/routes/index.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Hyperjump from \"@hyperjump/browser\";\n  import Validation from \"@hyperjump/validation\";\n  import Results from \"../components/Results.svelte\";\n\n\n  let validation = `{\n  \"$meta\": { \"$href\": \"https://validation.hyperjump.io/common\" },\n  \"type\": \"object\"\n}`;\n  const validationUrl = \"https://validate.hyperjump.io/validation\";\n\n  $: validate = (async function () {\n    if (typeof fetchStub !== \"undefined\" && validation !== \"\") {\n      fetchStub.set(validationUrl, validation, \"application/validation+json\");\n\n      const doc = Hyperjump.fetch(validationUrl);\n      return Validation.validate(doc);\n    }\n  }());\n\n  let subject = \"{}\";\n  const subjectUrl = \"https://mock.hyperjump.io/subject\";\n\n  $: results = (async function () {\n    if (typeof fetchStub !== \"undefined\" && subject !== \"\") {\n      fetchStub.set(subjectUrl, subject, \"application/reference+json\");\n\n      const doc = Hyperjump.fetch(subjectUrl);\n\n      let v;\n      try {\n        v = await validate;\n      } catch (e) {}\n\n      if (v) {\n        return v(doc);\n      }\n    }\n  }());\n</script>\n\n<svelte:head>\n  <title>Hyperjump Validate</title>\n</svelte:head>\n\n<h1>Hyperjump Validate</h1>\n\n<main>\n  <section>\n    <h2>Validation</h2>\n    <textarea class=\"editor\" bind:value={validation}></textarea>\n    <div class=\"results\">\n      {#await validate then v}\n        {#if v}\n          Valid\n        {/if}\n      {:catch error}\n        {#if Array.isArray(error)}\n          <Results results={error} />\n        {:else}\n          {error}\n        {/if}\n      {/await}\n    </div>\n  </section>\n  <section>\n    <h2>Subject</h2>\n    <textarea class=\"editor\" bind:value={subject}></textarea>\n    <div class=\"results\">\n      {#await results then r}\n        {#if r}\n          {#if Validation.isValid(r)}\n            Valid\n          {:else}\n            <Results results={r} />\n          {/if}\n        {/if}\n      {:catch error}\n        {error}\n      {/await}\n    </div>\n  </section>\n</main>\n\n<style>\n  h1 {\n    margin: 1em auto;\n  }\n\n  main {\n    display: flex;\n    height: 100%;\n  }\n\n  section {\n    display: flex;\n    flex: 1;\n    flex-direction: column;\n    padding: 1em;\n  }\n\n  .editor {\n    height: 100%;\n    min-height: 300px;\n    padding: .5em;\n    margin-bottom: 1em;\n    font-size: 16px;\n    border: thin solid black;\n  }\n\n  .results {\n    padding: .5em;\n    margin: 0;\n    min-height: 100px;\n    border: thin solid black;\n  }\n</style>\n"
  ],
  "names": [],
  "mappings": "AAsFE,EAAE,eAAC,CAAC,AACF,MAAM,CAAE,GAAG,CAAC,IAAI,AAClB,CAAC,AAED,IAAI,eAAC,CAAC,AACJ,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,IAAI,AACd,CAAC,AAED,OAAO,eAAC,CAAC,AACP,OAAO,CAAE,IAAI,CACb,IAAI,CAAE,CAAC,CACP,cAAc,CAAE,MAAM,CACtB,OAAO,CAAE,GAAG,AACd,CAAC,AAED,OAAO,eAAC,CAAC,AACP,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,KAAK,CACjB,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,GAAG,CAClB,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,IAAI,CAAC,KAAK,CAAC,KAAK,AAC1B,CAAC,AAED,QAAQ,eAAC,CAAC,AACR,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,CAAC,CACT,UAAU,CAAE,KAAK,CACjB,MAAM,CAAE,IAAI,CAAC,KAAK,CAAC,KAAK,AAC1B,CAAC"
}