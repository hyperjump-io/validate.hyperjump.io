{"version":3,"file":"index.474487ae.js","sources":["../../../node_modules/just-curry-it/index.js","../../../node_modules/content-type/index.js","../../../node_modules/url-resolve-browser/index.js","../../../node_modules/@hyperjump/browser/lib/fetch.browser.js","../../../node_modules/@hyperjump/browser/lib/common.js","../../../node_modules/@hyperjump/browser/lib/core.js","../../../node_modules/@hyperjump/json-pointer/json-pointer.js","../../../node_modules/@hyperjump/browser/lib/json-reference/core.js","../../../node_modules/@hyperjump/browser/lib/json/core.js","../../../node_modules/@hyperjump/browser/lib/index.js","../../../node_modules/@hyperjump/pact/lib/entries.js","../../../node_modules/@hyperjump/pact/lib/map.js","../../../node_modules/@hyperjump/pact/lib/reduce.js","../../../node_modules/@hyperjump/pact/lib/filter.js","../../../node_modules/@hyperjump/pact/lib/some.js","../../../node_modules/@hyperjump/pact/lib/every.js","../../../node_modules/@hyperjump/pact/lib/pipeline.js","../../../node_modules/@hyperjump/pact/lib/index.js","../../../node_modules/@hyperjump/pact/lib/all.js","../../../node_modules/@hyperjump/pact/lib/allValues.js","../../../node_modules/fastestsmallesttextencoderdecoder/NodeJS/EncoderAndDecoderNodeJS.src.js","../../../node_modules/@hyperjump/validation/lib/common.js","../../../node_modules/@hyperjump/validation/lib/core.js","../../../node_modules/fastest-stable-stringify/index.js","../../../node_modules/@hyperjump/validation/lib/keywords/common/const.js","../../../node_modules/@hyperjump/validation/lib/keywords/common/type.js","../../../node_modules/@hyperjump/validation/lib/keywords/common/multipleOf.js","../../../node_modules/@hyperjump/validation/lib/keywords/common/maximum.js","../../../node_modules/@hyperjump/validation/lib/keywords/common/exclusiveMaximum.js","../../../node_modules/@hyperjump/validation/lib/keywords/common/minimum.js","../../../node_modules/@hyperjump/validation/lib/keywords/common/exclusiveMinimum.js","../../../node_modules/@hyperjump/validation/lib/keywords/common/maxLength.js","../../../node_modules/@hyperjump/validation/lib/keywords/common/minLength.js","../../../node_modules/@hyperjump/validation/lib/keywords/common/pattern.js","../../../node_modules/@hyperjump/validation/lib/keywords/common/items.js","../../../node_modules/@hyperjump/validation/lib/keywords/common/tupleItems.js","../../../node_modules/@hyperjump/validation/lib/keywords/common/maxItems.js","../../../node_modules/@hyperjump/validation/lib/keywords/common/minItems.js","../../../node_modules/@hyperjump/validation/lib/keywords/common/uniqueItems.js","../../../node_modules/@hyperjump/validation/lib/keywords/common/properties.js","../../../node_modules/@hyperjump/validation/lib/keywords/common/patternProperties.js","../../../node_modules/@hyperjump/validation/lib/keywords/common/propertyNames.js","../../../node_modules/@hyperjump/validation/lib/keywords/common/maxProperties.js","../../../node_modules/@hyperjump/validation/lib/keywords/common/minProperties.js","../../../node_modules/@hyperjump/validation/lib/keywords/common/required.js","../../../node_modules/@hyperjump/validation/lib/keywords/common/allOf.js","../../../node_modules/@hyperjump/validation/lib/keywords/common/anyOf.js","../../../node_modules/@hyperjump/validation/lib/keywords/common/oneOf.js","../../../node_modules/@hyperjump/validation/lib/keywords/common/not.js","../../../node_modules/@hyperjump/validation/lib/keywords/common/definitions.js","../../../node_modules/@hyperjump/validation/lib/keywords/common/validation.js","../../../node_modules/@hyperjump/validation/lib/index.js","../../../src/components/Results.svelte","../../../src/routes/index.svelte"],"sourcesContent":["module.exports = curry;\n\n/*\n  function add(a, b, c) {\n    return a + b + c;\n  }\n  curry(add)(1)(2)(3); // 6\n  curry(add)(1)(2)(2); // 5\n  curry(add)(2)(4, 3); // 9\n\n  function add(...args) {\n    return args.reduce((sum, n) => sum + n, 0)\n  }\n  var curryAdd4 = curry(add, 4)\n  curryAdd4(1)(2, 3)(4); // 10\n\n  function converter(ratio, input) {\n    return (input*ratio).toFixed(1);\n  }\n  const curriedConverter = curry(converter)\n  const milesToKm = curriedConverter(1.62);\n  milesToKm(35); // 56.7\n  milesToKm(10); // 16.2\n*/\n\nfunction curry(fn, arity) {\n  return function curried() {\n    if (arity == null) {\n      arity = fn.length;\n    }\n    var args = [].slice.call(arguments);\n    if (args.length >= arity) {\n      return fn.apply(this, args);\n    } else {\n      return function() {\n        return curried.apply(this, args.concat([].slice.call(arguments)));\n      };\n    }\n  };\n}\n","/*!\n * content-type\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * RegExp to match *( \";\" parameter ) in RFC 7231 sec 3.1.1.1\n *\n * parameter     = token \"=\" ( token / quoted-string )\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n * quoted-string = DQUOTE *( qdtext / quoted-pair ) DQUOTE\n * qdtext        = HTAB / SP / %x21 / %x23-5B / %x5D-7E / obs-text\n * obs-text      = %x80-FF\n * quoted-pair   = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n */\nvar PARAM_REGEXP = /; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *(\"(?:[\\u000b\\u0020\\u0021\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u000b\\u0020-\\u00ff])*\"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) */g\nvar TEXT_REGEXP = /^[\\u000b\\u0020-\\u007e\\u0080-\\u00ff]+$/\nvar TOKEN_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 7230 sec 3.2.6\n *\n * quoted-pair = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n * obs-text    = %x80-FF\n */\nvar QESC_REGEXP = /\\\\([\\u000b\\u0020-\\u00ff])/g\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 7230 sec 3.2.6\n */\nvar QUOTE_REGEXP = /([\\\\\"])/g\n\n/**\n * RegExp to match type in RFC 7231 sec 3.1.1.1\n *\n * media-type = type \"/\" subtype\n * type       = token\n * subtype    = token\n */\nvar TYPE_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+\\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * Module exports.\n * @public\n */\n\nexports.format = format\nexports.parse = parse\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @public\n */\n\nfunction format (obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var parameters = obj.parameters\n  var type = obj.type\n\n  if (!type || !TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  var string = type\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!TOKEN_REGEXP.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} string\n * @return {Object}\n * @public\n */\n\nfunction parse (string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  // support req/res-like objects as argument\n  var header = typeof string === 'object'\n    ? getcontenttype(string)\n    : string\n\n  if (typeof header !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var index = header.indexOf(';')\n  var type = index !== -1\n    ? header.substr(0, index).trim()\n    : header.trim()\n\n  if (!TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid media type')\n  }\n\n  var obj = new ContentType(type.toLowerCase())\n\n  // parse parameters\n  if (index !== -1) {\n    var key\n    var match\n    var value\n\n    PARAM_REGEXP.lastIndex = index\n\n    while ((match = PARAM_REGEXP.exec(header))) {\n      if (match.index !== index) {\n        throw new TypeError('invalid parameter format')\n      }\n\n      index += match[0].length\n      key = match[1].toLowerCase()\n      value = match[2]\n\n      if (value[0] === '\"') {\n        // remove quotes and escapes\n        value = value\n          .substr(1, value.length - 2)\n          .replace(QESC_REGEXP, '$1')\n      }\n\n      obj.parameters[key] = value\n    }\n\n    if (index !== header.length) {\n      throw new TypeError('invalid parameter format')\n    }\n  }\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {object}\n * @return {Object}\n * @private\n */\n\nfunction getcontenttype (obj) {\n  var header\n\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    header = obj.getHeader('content-type')\n  } else if (typeof obj.headers === 'object') {\n    // req-like\n    header = obj.headers && obj.headers['content-type']\n  }\n\n  if (typeof header !== 'string') {\n    throw new TypeError('content-type header is missing from object')\n  }\n\n  return header\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction qstring (val) {\n  var str = String(val)\n\n  // no need to quote tokens\n  if (TOKEN_REGEXP.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !TEXT_REGEXP.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"'\n}\n\n/**\n * Class to represent a content type.\n * @private\n */\nfunction ContentType (type) {\n  this.parameters = Object.create(null)\n  this.type = type\n}\n","'use strict';\nmodule.exports = urlResolve;\n\n/*\nThe majority of the module is built by following RFC1808\nurl: https://tools.ietf.org/html/rfc1808\n*/\n\n// adds a slash at end if not present\nfunction _addSlash (url) {\n  return url + (url[url.length-1] === '/' ? '' : '/');\n}\n\n// resolve the ..'s (directory up) and such\nfunction _pathResolve (path) {\n  let pathSplit = path.split('/');\n\n  // happens when path starts with /\n  if (pathSplit[0] === '') {\n    pathSplit = pathSplit.slice(1);\n  }\n\n  // let segmentCount = 0; // number of segments that have been passed\n  let resultArray = [];\n  pathSplit.forEach((current, index) => {\n    // skip occurances of '.'\n    if (current !== '.') {\n      if (current === '..') {\n        resultArray.pop(); // remove previous\n      } else if (current !== '') {\n        resultArray.push(current);\n      }\n    }\n  });\n  return '/' + resultArray.join('/');\n}\n\n// parses a base url string into an object containing host, path and query\nfunction _baseParse (base) {\n  const resultObject = {\n    host: '',\n    path: '',\n    query: '',\n    protocol: ''\n  };\n\n  let path = base;\n  let protocolEndIndex = base.indexOf('//');\n\n  if (protocolEndIndex === -1) {\n    throw new Error('Error, protocol is not specified');\n  }\n\n  resultObject.protocol = path.substring(0, protocolEndIndex);\n\n  protocolEndIndex += 2; // add two to pass double slash\n\n  const pathIndex = base.indexOf('/', protocolEndIndex);\n  const queryIndex = base.indexOf('?');\n  const hashIndex = base.indexOf('#');\n\n  if (hashIndex !== -1) {\n    path = path.substring(0, hashIndex); // remove hash, not needed for base\n  }\n\n  if (queryIndex !== -1) {\n    const query = path.substring(queryIndex); // remove query, save in return obj\n    resultObject.query = query;\n    path = path.substring(0, queryIndex);\n  }\n\n  if (pathIndex !== -1) {\n    const host = path.substring(0, pathIndex); // separate host & path\n    resultObject.host = host;\n    path = path.substring(pathIndex);\n    resultObject.path = path;\n  } else {\n    resultObject.host = path; // there was no path, therefore path is host\n  }\n\n  return resultObject;\n}\n\n// https://tools.ietf.org/html/rfc3986#section-3.1\nconst _scheme = '[a-z][a-z0-9+.-]*'; // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\"  )]\nconst _isAbsolute = new RegExp(`^(${_scheme}:)?//`, 'i');\n\n// parses a relative url string into an object containing the href,\n// hash, query and whether it is a net path, absolute path or relative path\nfunction _relativeParse (relative) {\n  const resultObject = {\n    href: relative, // href is always what was passed through\n    hash: '',\n    query: '',\n    netPath: false,\n    absolutePath: false,\n    relativePath: false\n  };\n  // check for protocol\n  // if protocol exists, is net path (absolute URL)\n  if (_isAbsolute.test(relative)) {\n    resultObject.netPath = true;\n    // return, in this case the relative is the resolved url, no need to parse.\n    return resultObject;\n  }\n\n  // if / is first, this is an absolute path,\n  // I.E. it overwrites the base URL's path\n  if (relative[0] === '/') {\n    resultObject.absolutePath = true;\n    // return resultObject\n  } else {\n    resultObject.relativePath = true;\n  }\n\n  let path = relative;\n  const queryIndex = relative.indexOf('?');\n  const hashIndex = relative.indexOf('#');\n\n  if (hashIndex !== -1) {\n    const hash = path.substring(hashIndex);\n    resultObject.hash = hash;\n    path = path.substring(0, hashIndex);\n  }\n\n  if (queryIndex !== -1) {\n    const query = path.substring(queryIndex);\n    resultObject.query = query;\n    path = path.substring(0, queryIndex);\n  }\n\n  resultObject.path = path; // whatever is left is path\n  return resultObject;\n}\n\nfunction _shouldAddSlash (url) {\n  const protocolIndex = url.indexOf('//') + 2;\n  const noPath = !(url.includes('/', protocolIndex));\n  const noQuery = !(url.includes('?', protocolIndex));\n  const noHash = !(url.includes('#', protocolIndex));\n  return (noPath && noQuery && noHash);\n}\n\nfunction _shouldAddProtocol (url) {\n  return url.startsWith('//');\n}\n\n/*\n* PRECONDITION: Base is a fully qualified URL. e.g. http://example.com/\n* optional: path, query or hash\n* returns the resolved url\n*/\nfunction urlResolve (base, relative) {\n  base = base.trim();\n  relative = relative.trim();\n\n  // about is always absolute\n  if (relative.startsWith('about:')) {\n    return relative;\n  }\n\n  // if base is empty, assume relative is a net path.\n  if (base === '') {\n    if (_shouldAddSlash(relative)) {\n      return _addSlash(relative);\n    }\n    // add / at end if not present if is only the host\n    return relative;\n  }\n  const baseObj = _baseParse(base);\n  // relative is empty, return base minus hash\n  if (relative === '') {\n    const {host, path, query} = baseObj;\n    // when path and query aren't supplied add slash\n    if ((!path) && (!query)) {\n      return _addSlash(host);\n    }\n    return host + path + query;\n  }\n\n  const relativeObj = _relativeParse(relative);\n\n  if (relativeObj.netPath) { // relative is full qualified URL\n    if (_shouldAddProtocol(relativeObj.href)) {\n      relativeObj.href = baseObj.protocol + relativeObj.href;\n    }\n\n    if (_shouldAddSlash(relativeObj.href)) {\n      return _addSlash(relativeObj.href);\n    }\n\n    return relativeObj.href;\n  } else if (relativeObj.absolutePath) { // relative is an absolute path\n    const {path, query, hash} = relativeObj;\n\n    return baseObj.host + _pathResolve(path) + query + hash;\n  } else if (relativeObj.relativePath) { // relative is a relative path\n    const {path, query, hash} = relativeObj;\n\n    let basePath = baseObj.path;\n    let resultString = baseObj.host;\n\n    let resolvePath;\n\n    if (path.length === 0) {\n      resolvePath = basePath;\n    } else {\n      // remove last segment if no slash at end\n      basePath = basePath.substring(0, basePath.lastIndexOf('/'));\n      resolvePath = _pathResolve(basePath + '/' + path);\n    }\n\n    // if result is just the base host, add /\n    if ((resolvePath === '') && (!query) && (!hash)) {\n      resultString += '/';\n    } else {\n      resultString += resolvePath + query + hash;\n    }\n\n    return resultString;\n  }\n}\n","module.exports = fetch;\n","const uriReference = (url) => url.split(\"#\", 1)[0];\nconst uriFragment = (url) => url.split(\"#\", 2)[1] || \"\";\nconst isObject = (value) => typeof value === \"object\" && !Array.isArray(value) && value !== null;\n\nmodule.exports = { uriReference, uriFragment, isObject };\n","const curry = require(\"just-curry-it\");\nconst contentTypeParser = require(\"content-type\");\nconst resolveUrl = require(\"url-resolve-browser\");\nconst http = require(\"./fetch\");\nconst { uriReference, isObject } = require(\"./common\");\n\n\nconst construct = (url, headers, body) => Object.freeze({ url, headers, body });\nconst extend = (doc, extras) => Object.freeze({ ...doc, ...extras });\n\nconst nil = construct(\"\", {}, undefined);\nconst source = (doc) => doc.body;\nconst value = (doc) => contentTypeHandler(doc).value(doc);\n\nconst fetch = curry((url, options = {}) => {\n  const resultDoc = get(url, nil, options);\n  return wrapper(resultDoc, options);\n});\n\nconst get = curry(async (url, contextDoc, options = {}) => {\n  let result;\n  const doc = await contextDoc;\n  const resolvedUrl = resolveUrl(doc.url, url);\n\n  if (uriReference(doc.url) === uriReference(resolvedUrl)) {\n    result = extend(doc, { url: resolvedUrl });\n  } else if (doc.embedded && uriReference(resolvedUrl) in doc.embedded) {\n    const headers = { \"content-type\": doc.headers[\"content-type\"] };\n    result = construct(resolvedUrl, headers, doc.embedded[resolvedUrl]);\n  } else {\n    const response = await http(resolvedUrl, options);\n    const headers = {};\n    for (const [name, value] of response.headers.entries()) {\n      headers[name] = value;\n    }\n    result = construct(resolvedUrl, headers, await response.text());\n  }\n\n  return await contentTypeHandler(result).get(result, options);\n});\n\nconst wrapper = (doc, options = {}) => {\n  return new Proxy(doc, {\n    get: (doc, propertyName) => {\n      if (propertyName === \"then\") {\n        const v = project(doc, options);\n        const then = v.then;\n        return then.bind(v);\n      } else if (propertyName === \"$follow\") {\n        return (url) => {\n          const nextDoc = get(url, doc, options);\n          return wrapper(nextDoc, options);\n        };\n      } else if (propertyName === \"$source\") {\n        return doc.then(value);\n      } else if (propertyName === \"$url\") {\n        return doc.then((d) => d.url);\n      } else {\n        const value = safeStep(propertyName, doc, options);\n        return wrapper(value, options);\n      }\n    }\n  });\n};\n\nconst project = async (doc, options = {}) => {\n  const docValue = value(await doc);\n\n  if (isObject(docValue)) {\n    return Object.keys(docValue).reduce((acc, key) => {\n      const resultDoc = step(key, doc, options);\n      acc[key] = wrapper(resultDoc, options);\n      return acc;\n    }, {});\n  } else if (Array.isArray(docValue)) {\n    return Object.keys(docValue).map((key) => {\n      const resultDoc = step(key, doc, options);\n      return wrapper(resultDoc, options);\n    });\n  } else {\n    return docValue;\n  }\n};\n\nconst step = curry(async (key, doc, options = {}) => {\n  return contentTypeHandler(await doc).step(key, await doc, options);\n});\n\nconst safeStep = async (propertyName, doc, options = {}) => {\n  const docValue = value(await doc);\n  const keys = Object.keys(docValue);\n  return keys.includes(propertyName) ? step(propertyName, doc, options) : undefined;\n};\n\nconst contentTypes = {};\n\nconst defaultHandler = {\n  get: async (doc) => doc,\n  value: (doc) => isDocument(doc) ? source(doc) : doc,\n  step: async (key, doc) => value(doc)[key]\n};\n\nconst addContentType = (contentType, handler) => contentTypes[contentType] = handler;\nconst getContentType = (contentType) => contentTypes[contentType];\n\nconst contentTypeHandler = (doc) => {\n  if (doc === nil || !isDocument(doc)) {\n    return defaultHandler;\n  }\n\n  const contentType = contentTypeParser.parse(doc.headers[\"content-type\"]).type;\n  return contentType in contentTypes ? contentTypes[contentType] : defaultHandler;\n};\n\nconst isDocument = (value) => isObject(value) && \"url\" in value;\n\nmodule.exports = {\n  construct, extend, addContentType, getContentType,\n  nil, get, fetch, source, value, step\n};\n","const curry = require(\"just-curry-it\");\n\n\nconst nil = \"\";\n\nconst get = (pointer, value = undefined) => {\n  if (pointer.length > 0 && pointer[0] !== \"/\") {\n    throw Error(\"Invalid JSON Pointer\");\n  }\n\n  const ptr = pointer.split(\"/\").slice(1).map(unescape);\n\n  const fn = (value) => ptr.reduce(([value, pointer], segment) => {\n    return [applySegment(value, segment, pointer), append(segment, pointer)];\n  }, [value, \"\"])[0];\n\n  return value === undefined ? fn : fn(value);\n};\n\nconst append = curry((segment, pointer) => pointer + \"/\" + escape(segment));\n\nconst escape = (segment) => segment.toString().replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\nconst unescape = (segment) => segment.toString().replace(/~0/g, \"~\").replace(/~1/g, \"/\");\n\nconst applySegment = (value, segment, pointer = \"\") => {\n  if (value === null || typeof value !== \"object\") {\n    throw Error(`Value at '${pointer}' is a scalar and can't be indexed`);\n  } else if (!(segment in value)) {\n    throw Error(`Value at '${pointer}' does not have index '${segment}'`);\n  }\n\n  return value[segment];\n};\n\nmodule.exports = { nil, get, append };\n","const JsonPointer = require(\"@hyperjump/json-pointer\");\nconst Hyperjump = require(\"../core\");\nconst { uriReference, uriFragment, isObject } = require(\"../common\");\n\n\nconst get = async (doc, options) => {\n  const jrefDoc = !(\"jref\" in doc) ? Hyperjump.extend(doc, parse(doc)) : doc;\n  const docValue = value(jrefDoc);\n  return isHref(docValue) ? await Hyperjump.get(docValue[\"$href\"], jrefDoc, options) : jrefDoc;\n};\n\nconst parse = (doc) => {\n  const embedded = {};\n  const jref = JSON.parse(Hyperjump.source(doc), (key, value) => {\n    if (isEmbedded(value)) {\n      const id = uriReference(value[\"$embedded\"]);\n      delete value[\"$embedded\"];\n      embedded[id] = JSON.stringify(value);\n      return { \"$href\": id };\n    } else {\n      return value;\n    }\n  });\n\n  return { jref, embedded };\n};\n\nconst value = (doc) => JsonPointer.get(pointer(doc), doc.jref);\n\nconst step = async (key, doc, options = {}) => {\n  const ptr = JsonPointer.append(key, pointer(await doc));\n  const url = \"#\" + encodeURI(ptr).replace(/#/g, \"%23\");\n  return Hyperjump.get(url, doc, options);\n};\n\nconst pointer = (doc) => decodeURIComponent(uriFragment(doc.url));\nconst isHref = (value) => isObject(value) && \"$href\" in value;\nconst isEmbedded = (value) => isObject(value) && \"$embedded\" in value;\n\nmodule.exports = { get, value, step };\n","const Hyperjump = require(\"../core\");\n\n\nconst get = async (doc) => {\n  const json = JSON.parse(Hyperjump.source(doc));\n  return !(\"json\" in doc) ? Hyperjump.extend(doc, { json }) : doc;\n};\nconst value = (doc) => doc.json;\nconst step = async (key, doc) => value(await doc)[key];\n\nmodule.exports = { get, value, step };\n","const Hyperjump = require(\"./core\");\nconst JRef = require(\"./json-reference/core\");\nconst Json = require(\"./json/core\");\n\n\nHyperjump.addContentType(\"application/reference+json\", JRef);\nHyperjump.addContentType(\"application/json\", Json);\n\nmodule.exports = Hyperjump;\n","module.exports = async (doc) => Object.entries(await doc);\n","const curry = require(\"just-curry-it\");\n\n\nmodule.exports = curry(async (fn, doc) => (await doc).map(fn));\n","const curry = require(\"just-curry-it\");\n\n\nmodule.exports = curry(async (fn, acc, doc) => {\n  return (await doc).reduce(async (acc, item) => fn(await acc, item), acc);\n});\n","const curry = require(\"just-curry-it\");\nconst reduce = require(\"./reduce\");\n\n\nmodule.exports = curry(async (fn, doc, options = {}) => {\n  return reduce(async (acc, item) => {\n    return (await fn(item)) ? acc.concat([item]) : acc;\n  }, [], doc, options);\n});\n","const curry = require(\"just-curry-it\");\nconst map = require(\"./map\");\n\n\nmodule.exports = curry(async (fn, doc) => {\n  const results = await map(fn, doc);\n  return (await Promise.all(results))\n    .some((a) => a);\n});\n","const curry = require(\"just-curry-it\");\nconst map = require(\"./map\");\n\n\nmodule.exports = curry(async (fn, doc) => {\n  const results = await map(fn, doc);\n  return (await Promise.all(results))\n    .every((a) => a);\n});\n","const curry = require(\"just-curry-it\");\n\n\nmodule.exports = curry((fns, doc) => {\n  return fns.reduce(async (acc, fn) => fn(await acc), doc);\n});\n","module.exports = {\n  entries: require(\"./entries\"),\n  map: require(\"./map\"),\n  filter: require(\"./filter\"),\n  reduce: require(\"./reduce\"),\n  some: require(\"./some\"),\n  every: require(\"./every\"),\n  pipeline: require(\"./pipeline\"),\n  all: require(\"./all\"),\n  allValues: require(\"./allValues\")\n};\n","module.exports = (doc) => Promise.all(doc);\n","const pipeline = require(\"./pipeline\");\nconst entries = require(\"./entries\");\nconst reduce = require(\"./reduce\");\n\n\nmodule.exports = (doc) => {\n  return pipeline([\n    entries,\n    reduce(async (acc, [propertyName, propertyValue]) => {\n      acc[propertyName] = await propertyValue;\n      return acc;\n    }, {})\n  ], doc);\n};\n","(function(global){\n  \"use strict\";\n  // In this NodeJS version, Buffers are supported and used as fallback in versions that do not support Typed Arrays\n  var log = Math.log;\n  var LN2 = Math.LN2;\n  var clz32 = Math.clz32 || function(x) {return 31 - log(x >>> 0) / LN2 | 0};\n  var fromCharCode = String.fromCharCode;\n  var Object_prototype_toString = ({}).toString;\n  var NativeBuffer = global[\"Buffer\"];\n  if (!NativeBuffer && global[\"require\"]) try{NativeBuffer=global[\"require\"](\"Buffer\")}catch(e){}\n  var NativeBufferString = NativeBuffer && Object_prototype_toString.call(NativeBuffer.prototype);\n  var NativeUint8Array = global.Uint8Array;\n  var usingTypedArrays = NativeUint8Array && (!NativeBuffer || NativeUint8Array.prototype.isPrototypeOf(NativeBuffer));\n  var ArrayBufferString = usingTypedArrays && Object_prototype_toString.call(global.ArrayBuffer.prototype);\n  if (usingTypedArrays || NativeBuffer) {\n    function decoderReplacer(encoded){\n      var codePoint = encoded.charCodeAt(0) << 24;\n      var leadingOnes = clz32(~codePoint)|0;\n      var endPos = 0, stringLen = encoded.length|0;\n      var result = \"\";\n      if (leadingOnes < 5 && stringLen >= leadingOnes) {\n        codePoint = (codePoint<<leadingOnes)>>>(24+leadingOnes);\n        for (endPos = 1; endPos < leadingOnes; endPos=endPos+1|0)\n          codePoint = (codePoint<<6) | (encoded.charCodeAt(endPos)&0x3f/*0b00111111*/);\n        if (codePoint <= 0xFFFF) { // BMP code point\n          result += fromCharCode(codePoint);\n        } else if (codePoint <= 0x10FFFF) {\n          // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n          codePoint = codePoint - 0x10000|0;\n          result += fromCharCode(\n            (codePoint >> 10) + 0xD800|0,  // highSurrogate\n            (codePoint & 0x3ff) + 0xDC00|0 // lowSurrogate\n          );\n        } else endPos = 0; // to fill it in with INVALIDs\n      }\n      for (; endPos < stringLen; endPos=endPos+1|0) result += \"\\ufffd\"; // replacement character\n      return result;\n    }\n    function TextDecoder(){};\n    function decode(inputArrayOrBuffer){\n      var buffer = (inputArrayOrBuffer && inputArrayOrBuffer.buffer) || inputArrayOrBuffer;\n      var asString = Object_prototype_toString.call(buffer);\n      if (asString !== ArrayBufferString && asString !== NativeBufferString)\n        throw Error(\"Failed to execute 'decode' on 'TextDecoder': The provided value is not of type '(ArrayBuffer or ArrayBufferView)'\");\n      var inputAs8 = usingTypedArrays ? new NativeUint8Array(buffer) : buffer;\n      var resultingString = \"\";\n      for (var index=0,len=inputAs8.length|0; index<len; index=index+32768|0)\n        resultingString += fromCharCode.apply(0, inputAs8[usingTypedArrays ? \"subarray\" : \"slice\"](index,index+32768|0));\n\n      return resultingString.replace(/[\\xc0-\\xff][\\x80-\\xbf]*/g, decoderReplacer);\n    }\n    TextDecoder.prototype.decode = decode;\n    //////////////////////////////////////////////////////////////////////////////////////\n    function encoderReplacer(nonAsciiChars){\n      // make the UTF string into a binary UTF-8 encoded string\n      var point = nonAsciiChars.charCodeAt(0)|0;\n      if (point >= 0xD800 && point <= 0xDBFF) {\n        var nextcode = nonAsciiChars.charCodeAt(1)|0;\n        if (nextcode !== nextcode) // NaN because string is 1 code point long\n          return fromCharCode(0xef/*11101111*/, 0xbf/*10111111*/, 0xbd/*10111101*/);\n        // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        if (nextcode >= 0xDC00 && nextcode <= 0xDFFF) {\n          point = ((point - 0xD800)<<10) + nextcode - 0xDC00 + 0x10000|0;\n          if (point > 0xffff)\n            return fromCharCode(\n              (0x1e/*0b11110*/<<3) | (point>>>18),\n              (0x2/*0b10*/<<6) | ((point>>>12)&0x3f/*0b00111111*/),\n              (0x2/*0b10*/<<6) | ((point>>>6)&0x3f/*0b00111111*/),\n              (0x2/*0b10*/<<6) | (point&0x3f/*0b00111111*/)\n            );\n        } else return fromCharCode(0xef, 0xbf, 0xbd);\n      }\n      if (point <= 0x007f) return nonAsciiChars;\n      else if (point <= 0x07ff) {\n        return fromCharCode((0x6<<5)|(point>>>6), (0x2<<6)|(point&0x3f));\n      } else return fromCharCode(\n        (0xe/*0b1110*/<<4) | (point>>>12),\n        (0x2/*0b10*/<<6) | ((point>>>6)&0x3f/*0b00111111*/),\n        (0x2/*0b10*/<<6) | (point&0x3f/*0b00111111*/)\n      );\n    }\n    function TextEncoder(){};\n    function encode(inputString){\n      // 0xc0 => 0b11000000; 0xff => 0b11111111; 0xc0-0xff => 0b11xxxxxx\n      // 0x80 => 0b10000000; 0xbf => 0b10111111; 0x80-0xbf => 0b10xxxxxx\n      var encodedString = inputString === void 0 ?  \"\" : (\"\" + inputString).replace(/[\\x80-\\uD7ff\\uDC00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]?/g, encoderReplacer);\n      var len=encodedString.length|0, result = new (usingTypedArrays ? NativeUint8Array : NativeBuffer)(len);\n      for (var i=0; i<len; i=i+1|0)\n        result[i] = encodedString.charCodeAt(i)|0;\n      return result;\n    };\n    TextEncoder.prototype.encode = encode;\n    function factory(obj) {\n        if (!obj[\"TextDecoder\"]) obj[\"TextDecoder\"] = TextDecoder;\n        if (!obj[\"TextEncoder\"]) obj[\"TextEncoder\"] = TextEncoder;\n        if (obj !== global) obj[\"decode\"] = decode, obj[\"encode\"] = encode;\n        return obj;\n    };\n\n    typeof define == typeof factory && define[\"amd\"] ? define(function(){\n        return factory({});\n    }) : factory(typeof exports == 'object' ? exports : global);\n  }\n})(typeof global == \"\" + void 0 ? typeof self == \"\" + void 0 ? this : self : global);\n","const { encode } = require(\"fastestsmallesttextencoderdecoder\");\n\n\nconst isObject = (value) => typeof value === \"object\" && !Array.isArray(value) && value !== null;\n\nconst isType = {\n  \"null\": (value) => value === null,\n  \"boolean\": (value) => typeof value === \"boolean\",\n  \"object\": isObject,\n  \"array\": (value) => Array.isArray(value),\n  \"number\": (value) => typeof value === \"number\",\n  \"string\": (value) => typeof value === \"string\"\n};\n\nconst numberEqual = (a, b) => {\n  return Math.abs(a - b) < Number.EPSILON;\n};\n\nconst jsonStringLength = (string) => encode(string).length;\n\nmodule.exports = { isObject, isType, numberEqual, jsonStringLength };\n","const Hyperjump = require(\"@hyperjump/browser\");\nconst Pact = require(\"@hyperjump/pact\");\nconst { isType, isObject } = require(\"./common\");\n\n\nconst validate = async (doc) => {\n  const meta = await metaCompile(doc);\n  const result = await metaInterpret(meta, doc);\n\n  if (!isValid(result)) {\n    throw result;\n  }\n\n  const ast = await compile(doc, {});\n  return interpret(ast, await doc.$url);\n};\n\nconst compile = async (doc, ast) => {\n  const url = (await doc.$url).replace(/#$/, \"\");\n\n  if (!(url in ast)) {\n    ast[url] = false;\n\n    const meta = await getMeta(doc);\n\n    ast[url] = await Pact.pipeline([\n      Pact.entries,\n      Pact.filter(([keyword]) => keyword !== \"$meta\"),\n      Pact.map(async ([keyword, keywordDoc]) => {\n        if (!(keyword in meta)) {\n          throw Error(`Encountered undeclared keyword '${keyword}' at '${await keywordDoc.$url}'`);\n        }\n\n        const keywordUrl = await meta[keyword];\n        const compiledKeyword = await keywords[keywordUrl].compile(keywordDoc, ast);\n        return [keywordUrl, await keywordDoc.$url, compiledKeyword];\n      }),\n      Pact.all\n    ], doc);\n  }\n\n  return ast;\n};\n\nconst metaAst = {};\nconst metaCompile = async (doc) => {\n  const meta = await getMeta(doc);\n\n  await Pact.pipeline([\n    Pact.entries,\n    Pact.filter(([keyword, keywordUrl]) => keyword[0] !== \"$\" && !(keywordUrl in metaAst)),\n    Pact.map(async ([keyword, _]) => {\n      const keywordUrl = meta[keyword];\n      const metaDoc = Hyperjump.fetch(keywordUrl);\n      return await compile(metaDoc, metaAst);\n    }),\n    Pact.all\n  ], meta);\n\n  return meta;\n};\n\nconst interpret = (ast, url) => async (doc, memo = new Set()) => {\n  url = url.replace(/#$/, \"\");\n\n  // Cycle protection\n  const docUrl = isObject(doc) ? await doc.$url : undefined;\n  if (docUrl) {\n    const docKey = `${url}--${docUrl}`;\n    if (memo.has(docKey)) {\n      return [];\n    } else {\n      memo.add(docKey);\n    }\n  }\n\n  return Pact.pipeline([\n    Pact.map(async ([keywordUrl, valueUrl, keywordValue]) => {\n      const keyword = keywords[keywordUrl];\n      const isValid = (keyword.type !== undefined && !isType[keyword.type](await doc)) || await keyword.interpret(keywordValue, doc, ast, memo);\n\n      return [valueUrl, isValid];\n    }),\n    Pact.all\n  ], ast[url]);\n};\n\nconst metaInterpret = async (meta, doc, memo = new Set()) => {\n  return Pact.pipeline([\n    Pact.entries,\n    Pact.filter(([keyword]) => keyword in meta),\n    Pact.map(async ([keyword, keywordValue]) => {\n      const keywordUrl = meta[keyword];\n      const result = await interpret(metaAst, keywordUrl)(keywordValue, memo);\n      return [await keywordValue.$url, isValid(result)];\n    }),\n    Pact.all\n  ], doc);\n};\n\nconst getMeta = async (doc) => {\n  try {\n    return Pact.allValues(await doc.$follow(\"#/$meta\"));\n  } catch (error) {\n    return {};\n  }\n};\n\nconst isValid = (result) => result.every(([_pointer, isValid]) => isValid);\n\nconst keywords = {};\n\nconst addKeyword = (url, keywordDefinition) => keywords[url] = keywordDefinition;\n\nmodule.exports = { compile, metaCompile, interpret, metaInterpret, addKeyword, validate, isValid };\n","'use strict';\n\nvar keyList = Object.keys;\nvar native_stringify = JSON.stringify;\n\nfunction stringify(val, allowUndefined) {\n    var i, max, str, keys, key, propVal, tipeof;\n\n    tipeof = typeof val;\n\n    if (tipeof === 'string') return native_stringify(val);\n    if (val === true) return 'true';\n    if (val === false) return 'false';\n    if (val === null) return 'null';\n\n    if (val instanceof Array) {\n        str = '[';\n        max = val.length - 1;\n        for(i = 0; i < max; i++)\n            str += stringify(val[i], false) + ',';\n        if (max > -1) {\n            str += stringify(val[i], false);\n        }\n\n        return str + ']';\n    }\n\n    if (val instanceof Object) {\n        if (typeof val.toJSON === 'function')\n            return stringify(val.toJSON(), allowUndefined);\n\n        // only object is left\n        keys = keyList(val).sort();\n        max = keys.length;\n        str = '';\n        i = 0;\n        while (i < max) {\n            key = keys[i];\n            propVal = stringify(val[key], true);\n            if (propVal !== undefined) {\n                if (i && str !== '') { //if the string is empty, don't add comma to avoid the json to become invalid.\n                    str += ',';\n                }\n                str += native_stringify(key) + ':' + propVal;\n            }\n            i++;\n        }\n        return '{' + str + '}';\n    }\n\n    switch (tipeof) {\n    case 'function':\n    case 'undefined':\n        return allowUndefined ? undefined : null;\n    default:\n        return isFinite(val) ? val : null;\n    }\n}\n\nmodule.exports = function(obj) { return '' + stringify(obj, false); };\n","const jsonStringify = require(\"fastest-stable-stringify\");\nconst { isObject } = require(\"../../common\");\n\n\nconst compile = async (doc) => jsonStringify(await doc.$source);\n\nconst interpret = async (constValue, doc) => {\n  const docValue = isObject(doc) && await doc.$url ? await doc.$source : await doc;\n  return jsonStringify(docValue) === constValue;\n};\n\nmodule.exports = { compile, interpret };\n","const { isType } = require(\"../../common\");\n\n\nconst compile = (doc) => doc;\nconst interpret = async (type, doc) => {\n  return isType[type](await doc);\n};\n\nmodule.exports = { compile, interpret };\n","const { numberEqual } = require(\"../../common\");\n\n\nconst type = \"number\";\n\nconst compile = (doc) => doc;\n\nconst interpret = async (multipleOf, doc) => {\n  const remainder = (await doc) % multipleOf;\n  return numberEqual(0, remainder) || numberEqual(multipleOf, remainder);\n};\n\nmodule.exports = { type, compile, interpret };\n","const type = \"number\";\nconst compile = (doc) => doc;\nconst interpret = async (maximum, doc) => await doc <= maximum;\n\nmodule.exports = { type, compile, interpret };\n","const type = \"number\";\nconst compile = (doc) => doc;\nconst interpret = async (exclusiveMaximum, doc) => await doc < exclusiveMaximum;\n\nmodule.exports = { type, compile, interpret };\n","const type = \"number\";\nconst compile = (doc) => doc;\nconst interpret = async (minimum, doc) => (await doc) >= minimum;\n\nmodule.exports = { type, compile, interpret };\n","const type = \"number\";\nconst compile = (doc) => doc;\nconst interpret = async (exclusiveMinimum, doc) => await doc > exclusiveMinimum;\n\nmodule.exports = { type, compile, interpret };\n","const { jsonStringLength } = require(\"../../common\");\n\n\nconst type = \"string\";\nconst compile = (doc) => doc;\nconst interpret = async (maxLength, doc) => jsonStringLength(await doc) <= maxLength;\n\nmodule.exports = { type, compile, interpret };\n","const { jsonStringLength } = require(\"../../common\");\n\n\nconst type = \"string\";\nconst compile = (doc) => doc;\nconst interpret = async (minLength, doc) => jsonStringLength(await doc) >= minLength;\n\nmodule.exports = { type, compile, interpret };\n","const type = \"string\";\nconst compile = async (doc) => new RegExp(await doc);\nconst interpret = async (pattern, doc) => pattern.test(await doc);\n\nmodule.exports = { type, compile, interpret };\n","const Pact = require(\"@hyperjump/pact\");\nconst Validation = require(\"../../core\");\n\n\nconst type = \"array\";\n\nconst compile = async (doc, ast) => {\n  await Validation.compile(doc, ast);\n  return doc.$url;\n};\n\nconst interpret = (items, doc, ast, memo) => {\n  return Pact.every(async (item) => {\n    const result = await Validation.interpret(ast, items)(item, memo);\n    return Validation.isValid(result);\n  }, doc);\n};\n\nmodule.exports = { type, compile, interpret };\n","const Pact = require(\"@hyperjump/pact\");\nconst Validation = require(\"../../core\");\n\n\nconst type = \"array\";\n\nconst compile = (doc, ast) => {\n  return Pact.pipeline([\n    Pact.map(async (itemDoc) => {\n      await Validation.compile(itemDoc, ast);\n      return itemDoc.$url;\n    }),\n    Pact.all\n  ], doc);\n};\n\nconst interpret = (tupleItems, doc, ast, memo) => {\n  return Pact.every(async (item, ndx) => {\n    if (!(ndx in tupleItems)) {\n      return true;\n    }\n\n    const result = await Validation.interpret(ast, tupleItems[ndx])(item, memo);\n    return Validation.isValid(result);\n  }, doc);\n};\n\nmodule.exports = { type, compile, interpret };\n","const type = \"array\";\nconst compile = (doc) => doc;\nconst interpret = async (maxItems, doc) => (await doc).length <= maxItems;\n\nmodule.exports = { type, compile, interpret };\n","const type = \"array\";\nconst compile = (doc) => doc;\nconst interpret = async (minItems, doc) => (await doc).length >= minItems;\n\nmodule.exports = { type, compile, interpret };\n","const Pact = require(\"@hyperjump/pact\");\nconst jsonStringify = require(\"fastest-stable-stringify\");\n\n\nconst type = \"array\";\n\nconst compile = (doc) => doc;\n\nconst interpret = async (uniqueItems, doc) => {\n  if (uniqueItems === false) {\n    return true;\n  }\n\n  const normalizedItems = await Pact.map(jsonStringify, doc);\n  return (new Set(normalizedItems)).size === normalizedItems.length;\n};\n\nmodule.exports = { type, compile, interpret };\n","const Pact = require(\"@hyperjump/pact\");\nconst Validation = require(\"../../core\");\n\n\nconst type = \"object\";\n\nconst compile = (doc, ast) => Pact.pipeline([\n  Pact.entries,\n  Pact.reduce(async (acc, [propertyName, propertyDoc]) => {\n    await Validation.compile(propertyDoc, ast);\n    acc[propertyName] = await propertyDoc.$url;\n    return acc;\n  }, {})\n], doc);\n\nconst interpret = (properties, doc, ast, memo) => {\n  return Pact.pipeline([\n    Pact.entries,\n    Pact.filter(([propertyName]) => propertyName in properties),\n    Pact.every(async ([propertyName, propertyValue]) => {\n      const result = await Validation.interpret(ast, properties[propertyName])(propertyValue, memo);\n      return Validation.isValid(result);\n    })\n  ], doc);\n};\n\nmodule.exports = { type, compile, interpret };\n","const Pact = require(\"@hyperjump/pact\");\nconst Validation = require(\"../../core\");\n\n\nconst type = \"object\";\n\nconst compile = async (doc, ast) => Pact.pipeline([\n  Pact.entries,\n  Pact.map(async ([propertyPattern, propertyDoc]) => {\n    await Validation.compile(propertyDoc, ast);\n    return [new RegExp(propertyPattern), await propertyDoc.$url];\n  }),\n  Pact.all\n], doc);\n\nconst interpret = (patternProperties, doc, ast, memo) => {\n  return Pact.every(([pattern, property]) => {\n    return Pact.pipeline([\n      Pact.entries,\n      Pact.filter(([propertyName]) => pattern.test(propertyName)),\n      Pact.every(async ([, propertyValue]) => {\n        const result = await Validation.interpret(ast, property)(propertyValue, memo);\n        return Validation.isValid(result);\n      })\n    ], doc);\n  }, patternProperties);\n};\n\nmodule.exports = { type, compile, interpret };\n","const Pact = require(\"@hyperjump/pact\");\nconst Validation = require(\"../../core\");\n\n\nconst type = \"object\";\n\nconst compile = async (doc, ast) => {\n  await Validation.compile(doc, ast);\n  return doc.$url;\n};\n\nconst interpret = (propertyNames, doc, ast, memo) => {\n  return Pact.pipeline([\n    Pact.entries,\n    Pact.every(async ([name]) => {\n      const result = await Validation.interpret(ast, propertyNames)(name, memo);\n      return Validation.isValid(result);\n    })\n  ], doc);\n};\n\nmodule.exports = { type, compile, interpret };\n","const type = \"object\";\nconst compile = (doc) => doc;\nconst interpret = async (maxProperties, doc) => Object.keys(await doc).length <= maxProperties;\n\nmodule.exports = { type, compile, interpret };\n","const type = \"object\";\nconst compile = (doc) => doc;\nconst interpret = async (minProperties, doc) => Object.keys(await doc).length >= minProperties;\n\nmodule.exports = { type, compile, interpret };\n","const Pact = require(\"@hyperjump/pact\");\n\n\nconst type = \"object\";\nconst compile = async (doc) => Pact.all(await doc);\nconst interpret = (required, doc) => {\n  return Pact.every(async (propertyName) => propertyName in await doc, required);\n};\n\nmodule.exports = { type, compile, interpret };\n","const Pact = require(\"@hyperjump/pact\");\nconst Validation = require(\"../../core\");\n\n\nconst compile = async (doc, ast) => {\n  return Pact.pipeline([\n    Pact.map(async (subDoc) => {\n      await Validation.compile(subDoc, ast);\n      return subDoc.$url;\n    }),\n    Pact.all\n  ], doc);\n};\n\nconst interpret = (allOf, doc, ast, memo) => {\n  return Pact.every(async (subDoc) => {\n    const result = await Validation.interpret(ast, subDoc)(doc, memo);\n    return Validation.isValid(result);\n  }, allOf);\n};\n\nmodule.exports = { compile, interpret };\n","const Pact = require(\"@hyperjump/pact\");\nconst Validation = require(\"../../core\");\n\n\nconst compile = (doc, ast) => {\n  return Pact.pipeline([\n    Pact.map(async (subDoc) => {\n      await Validation.compile(subDoc, ast);\n      return subDoc.$url;\n    }),\n    Pact.all\n  ], doc);\n};\n\nconst interpret = (anyOf, doc, ast, memo) => {\n  return Pact.some(async (url) => {\n    const result = await Validation.interpret(ast, url)(doc, memo);\n    return Validation.isValid(result);\n  }, anyOf);\n};\n\nmodule.exports = { compile, interpret };\n","const Pact = require(\"@hyperjump/pact\");\nconst Validation = require(\"../../core\");\n\n\nconst compile = (doc, ast) => {\n  return Pact.pipeline([\n    Pact.map(async (subDoc) => {\n      await Validation.compile(subDoc, ast);\n      return subDoc.$url;\n    }),\n    Pact.all\n  ], doc);\n};\n\nconst interpret = (oneOf, doc, ast, memo) => {\n  return Pact.reduce(async (acc, subDoc) => {\n    const result = await Validation.interpret(ast, subDoc)(doc, memo);\n    const isValid = Validation.isValid(result);\n    return acc ? !isValid : isValid;\n  }, false, oneOf);\n};\n\nmodule.exports = { compile, interpret };\n","const Validation = require(\"../../core\");\n\n\nconst compile = async (doc, ast) => {\n  await Validation.compile(doc, ast);\n  return doc.$url;\n};\n\nconst interpret = async (not, doc, ast, memo) => {\n  const result = await Validation.interpret(ast, not)(doc, memo);\n  return !Validation.isValid(result);\n};\n\nmodule.exports = { compile, interpret };\n","const compile = async () => undefined;\nconst interpret = () => true;\n\nmodule.exports = { compile, interpret };\n","const Validation = require(\"../../core\");\n\n\nconst type = \"object\";\n\nconst compile = async (doc) => {\n  const meta = await Validation.metaCompile(doc);\n  return [await doc, meta];\n};\n\nconst interpret = async ([validation, meta], doc, ast, memo) => {\n  if (!validation) {\n    return true;\n  }\n\n  const result = await Validation.metaInterpret(meta, doc, memo);\n  return Validation.isValid(result);\n};\n\nmodule.exports = { type, compile, interpret };\n","const Hyperjump = require(\"@hyperjump/browser\");\nconst Core = require(\"./core\");\n\n\nconst addCommonKeywords = (keywordDomain) => {\n  Core.addKeyword(`${keywordDomain}/const`, require(\"./keywords/common/const\"));\n  Core.addKeyword(`${keywordDomain}/type`, require(\"./keywords/common/type\"));\n  Core.addKeyword(`${keywordDomain}/multipleOf`, require(\"./keywords/common/multipleOf\"));\n  Core.addKeyword(`${keywordDomain}/maximum`, require(\"./keywords/common/maximum\"));\n  Core.addKeyword(`${keywordDomain}/exclusiveMaximum`, require(\"./keywords/common/exclusiveMaximum\"));\n  Core.addKeyword(`${keywordDomain}/minimum`, require(\"./keywords/common/minimum\"));\n  Core.addKeyword(`${keywordDomain}/exclusiveMinimum`, require(\"./keywords/common/exclusiveMinimum\"));\n  Core.addKeyword(`${keywordDomain}/maxLength`, require(\"./keywords/common/maxLength\"));\n  Core.addKeyword(`${keywordDomain}/minLength`, require(\"./keywords/common/minLength\"));\n  Core.addKeyword(`${keywordDomain}/pattern`, require(\"./keywords/common/pattern\"));\n  Core.addKeyword(`${keywordDomain}/items`, require(\"./keywords/common/items\"));\n  Core.addKeyword(`${keywordDomain}/tupleItems`, require(\"./keywords/common/tupleItems\"));\n  Core.addKeyword(`${keywordDomain}/maxItems`, require(\"./keywords/common/maxItems\"));\n  Core.addKeyword(`${keywordDomain}/minItems`, require(\"./keywords/common/minItems\"));\n  Core.addKeyword(`${keywordDomain}/uniqueItems`, require(\"./keywords/common/uniqueItems\"));\n  Core.addKeyword(`${keywordDomain}/properties`, require(\"./keywords/common/properties\"));\n  Core.addKeyword(`${keywordDomain}/patternProperties`, require(\"./keywords/common/patternProperties\"));\n  Core.addKeyword(`${keywordDomain}/propertyNames`, require(\"./keywords/common/propertyNames\"));\n  Core.addKeyword(`${keywordDomain}/maxProperties`, require(\"./keywords/common/maxProperties\"));\n  Core.addKeyword(`${keywordDomain}/minProperties`, require(\"./keywords/common/minProperties\"));\n  Core.addKeyword(`${keywordDomain}/required`, require(\"./keywords/common/required\"));\n  Core.addKeyword(`${keywordDomain}/allOf`, require(\"./keywords/common/allOf\"));\n  Core.addKeyword(`${keywordDomain}/anyOf`, require(\"./keywords/common/anyOf\"));\n  Core.addKeyword(`${keywordDomain}/oneOf`, require(\"./keywords/common/oneOf\"));\n  Core.addKeyword(`${keywordDomain}/not`, require(\"./keywords/common/not\"));\n  Core.addKeyword(`${keywordDomain}/definitions`, require(\"./keywords/common/definitions\"));\n  Core.addKeyword(`${keywordDomain}/validation`, require(\"./keywords/common/validation\"));\n};\n\nconst JRef = Hyperjump.getContentType(\"application/reference+json\");\nHyperjump.addContentType(\"application/validation+json\", JRef);\n\naddCommonKeywords(\"http://validation.hyperjump.io/common\");\naddCommonKeywords(\"https://validation.hyperjump.io/common\");\n\nmodule.exports = Core;\n","<script>\n  export let results;\n\n  $: messages = results\n    .filter(([_, isValid]) => !isValid)\n    .map(([pointer]) => pointer);\n</script>\n\nInvalid\n<ul>\n  {#each messages as message}\n    <li>{message}</li>\n  {/each}\n</ul>\n","<script>\n  import Hyperjump from \"@hyperjump/browser\";\n  import Validation from \"@hyperjump/validation\";\n  import Results from \"../components/Results.svelte\";\n\n\n  let validation = `{\n  \"$meta\": { \"$href\": \"https://validation.hyperjump.io/common\" },\n  \"type\": \"object\"\n}`;\n  const validationUrl = \"https://validate.hyperjump.io/validation\";\n\n  $: validate = (async function () {\n    if (typeof fetchStub !== \"undefined\" && validation !== \"\") {\n      fetchStub.set(validationUrl, validation, \"application/validation+json\");\n\n      const doc = Hyperjump.fetch(validationUrl);\n      return Validation.validate(doc);\n    }\n  }());\n\n  let subject = \"{}\";\n  const subjectUrl = \"https://mock.hyperjump.io/subject\";\n\n  $: results = (async function () {\n    if (typeof fetchStub !== \"undefined\" && subject !== \"\") {\n      fetchStub.set(subjectUrl, subject, \"application/reference+json\");\n\n      const doc = Hyperjump.fetch(subjectUrl);\n\n      let v;\n      try {\n        v = await validate;\n      } catch (e) {}\n\n      if (v) {\n        return v(doc);\n      }\n    }\n  }());\n</script>\n\n<svelte:head>\n  <title>Hyperjump Validate</title>\n</svelte:head>\n\n<h1>Hyperjump Validate</h1>\n\n<main>\n  <section>\n    <h2>Validation</h2>\n    <textarea class=\"editor\" bind:value={validation}></textarea>\n    <div class=\"results\">\n      {#await validate then v}\n        {#if v}\n          Valid\n        {/if}\n      {:catch error}\n        {#if Array.isArray(error)}\n          <Results results={error} />\n        {:else}\n          {error}\n        {/if}\n      {/await}\n    </div>\n  </section>\n  <section>\n    <h2>Subject</h2>\n    <textarea class=\"editor\" bind:value={subject}></textarea>\n    <div class=\"results\">\n      {#await results then r}\n        {#if r}\n          {#if Validation.isValid(r)}\n            Valid\n          {:else}\n            <Results results={r} />\n          {/if}\n        {/if}\n      {:catch error}\n        {error}\n      {/await}\n    </div>\n  </section>\n</main>\n\n<style>\n  h1 {\n    margin: 1em auto;\n  }\n\n  main {\n    display: flex;\n    height: 100%;\n  }\n\n  section {\n    display: flex;\n    flex: 1;\n    flex-direction: column;\n    padding: 1em;\n  }\n\n  .editor {\n    height: 100%;\n    min-height: 300px;\n    padding: .5em;\n    margin-bottom: 1em;\n    font-size: 16px;\n    border: thin solid black;\n  }\n\n  .results {\n    padding: .5em;\n    margin: 0;\n    min-height: 100px;\n    border: thin solid black;\n  }\n</style>\n"],"names":["fn","arity","curried","length","args","slice","call","arguments","apply","this","concat","PARAM_REGEXP","TEXT_REGEXP","TOKEN_REGEXP","QESC_REGEXP","QUOTE_REGEXP","TYPE_REGEXP","qstring","val","str","String","test","TypeError","replace","ContentType","type","parameters","Object","create","obj","string","param","params","keys","sort","i","header","getHeader","headers","getcontenttype","index","indexOf","substr","trim","toLowerCase","key","match","value","lastIndex","exec","base","relative","startsWith","_shouldAddSlash","_addSlash","baseObj","resultObject","host","path","query","protocol","protocolEndIndex","Error","substring","pathIndex","queryIndex","hashIndex","_baseParse","relativeObj","href","hash","netPath","absolutePath","relativePath","_isAbsolute","_relativeParse","_pathResolve","resolvePath","basePath","resultString","lastIndexOf","url","pathSplit","split","resultArray","forEach","current","pop","push","join","RegExp","protocolIndex","noPath","includes","noQuery","noHash","fetch","uriReference","uriFragment","isObject","Array","isArray","require$$0","construct","body","freeze","extend","doc","extras","nil","undefined","source","contentTypeHandler","curry","options","resultDoc","get","wrapper","async","contextDoc","result","resolvedUrl","resolveUrl","embedded","content-type","response","http","name","entries","text","Proxy","propertyName","v","project","then","bind","nextDoc","d","safeStep","docValue","reduce","acc","step","map","contentTypes","defaultHandler","isDocument","contentType","contentTypeParser","parse","addContentType","handler","getContentType","append","segment","pointer","escape","toString","unescape","applySegment","ptr","jref","JSON","Hyperjump","isEmbedded","id","stringify","$href","JsonPointer","decodeURIComponent","isHref","jrefDoc","encodeURI","json","JRef","Json","item","results","Promise","all","some","a","every","fns","require$$1","filter","require$$2","require$$3","require$$4","require$$5","pipeline","require$$6","allValues","propertyValue","global","log","Math","LN2","clz32","x","fromCharCode","Object_prototype_toString","NativeBuffer","e","NativeBufferString","prototype","NativeUint8Array","Uint8Array","usingTypedArrays","isPrototypeOf","ArrayBufferString","ArrayBuffer","decoderReplacer","encoded","codePoint","charCodeAt","leadingOnes","endPos","stringLen","TextDecoder","decode","inputArrayOrBuffer","buffer","asString","inputAs8","resultingString","len","encoderReplacer","nonAsciiChars","point","nextcode","TextEncoder","encode","inputString","encodedString","factory","exports","self","isType","null","boolean","object","array","number","numberEqual","b","abs","Number","EPSILON","jsonStringLength","compile","ast","$url","meta","getMeta","Pact","keyword","keywordDoc","keywordUrl","compiledKeyword","keywords","metaAst","metaCompile","_","metaDoc","interpret","memo","Set","docUrl","docKey","has","add","valueUrl","keywordValue","metaInterpret","isValid","$follow","error","_pointer","addKeyword","keywordDefinition","validate","keyList","native_stringify","allowUndefined","max","propVal","tipeof","toJSON","isFinite","jsonStringify","$source","constValue","multipleOf","remainder","maximum","exclusiveMaximum","minimum","exclusiveMinimum","maxLength","minLength","pattern","Validation","items","itemDoc","tupleItems","ndx","maxItems","minItems","uniqueItems","normalizedItems","size","propertyDoc","properties","propertyPattern","patternProperties","property","propertyNames","maxProperties","minProperties","required","subDoc","allOf","anyOf","oneOf","not","validation","addCommonKeywords","keywordDomain","Core","require$$7","require$$8","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","require$$15","require$$16","require$$17","require$$18","require$$19","require$$20","require$$21","require$$22","require$$23","require$$24","require$$25","require$$26","message","messages","r","subject","validationUrl","subjectUrl","fetchStub","set"],"mappings":"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"}