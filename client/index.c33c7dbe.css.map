{
  "version": 3,
  "file": "index.c33c7dbe.css",
  "sources": [
    "../../../../../../src/routes/index.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Hyperjump from \"@hyperjump/browser\";\n  import Validation from \"@hyperjump/validation\";\n\n\n  let validation = \"\";\n  const validationUrl = \"https://mock.hyperjump.io/validation\";\n\n  $: validate = (async function () {\n    if (validation !== \"\") {\n      fetchStub.set(validationUrl, validation, \"application/reference+json\");\n\n      const doc = Hyperjump.get(validationUrl, Hyperjump.nil);\n      return Validation.validate(doc);\n    }\n  }());\n\n  let subject = \"\";\n  const subjectUrl = \"https://mock.hyperjump.io/subject\";\n\n  $: result = (async function () {\n    if (subject !== \"\") {\n      fetchStub.set(subjectUrl, subject, \"application/reference+json\");\n\n      const doc = Hyperjump.get(subjectUrl, Hyperjump.nil);\n\n      let v;\n      try {\n        v = await validate;\n      } catch (e) {}\n\n      if (v) {\n        return v(doc);\n      }\n    }\n  }());\n</script>\n\n<svelte:head>\n\t<title>Hyperjump Validation</title>\n</svelte:head>\n\n<main>\n  <h1>Hyperjump Validation</h1>\n  <div class=\"foo\">\n    <div class=\"bar\">\n      <h2>Validation</h2>\n      <textarea name=\"validation\" bind:value={validation}></textarea>\n      <pre class=\"results\">\n        {#await validate then v}\n          {#if v}\n            Valid\n          {/if}\n        {:catch error}\n          {Array.isArray(error) ? JSON.stringify(error, null, \"  \") : error}\n        {/await}\n      </pre>\n    </div>\n    <div class=\"bar\">\n      <h2>Subject</h2>\n      <textarea name=\"subject\" bind:value={subject}></textarea>\n      <pre class=\"results\">\n        {#await result then r}\n          {#if r}\n            {Validation.isValid(r) ? \"Valid\" : JSON.stringify(r, null, \"  \")}\n          {/if}\n        {:catch error}\n          {error}\n        {/await}\n      </pre>\n    </div>\n  </div>\n</main>\n\n<style>\n  .foo {\n    display: flex;\n    height: 100%;\n    width: 100%;\n  }\n\n  .bar {\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n    padding: 1em;\n  }\n\n  .results {\n    border: thin solid black;\n    padding: .5em;\n    min-height: 100px;\n    overflow: scroll;\n  }\n\n  h1 {\n    margin: 1em auto;\n  }\n\n  textarea {\n    display: block;\n    height: 100%;\n    border: thin solid black;\n    min-height: 300px;\n    font-size: 16px;\n    padding: .5em;\n    margin-bottom: 1em;\n  }\n</style>\n"
  ],
  "names": [],
  "mappings": "AA2EE,IAAI,eAAC,CAAC,AACJ,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,AACb,CAAC,AAED,IAAI,eAAC,CAAC,AACJ,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,IAAI,CACX,cAAc,CAAE,MAAM,CACtB,OAAO,CAAE,GAAG,AACd,CAAC,AAED,QAAQ,eAAC,CAAC,AACR,MAAM,CAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CACxB,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,KAAK,CACjB,QAAQ,CAAE,MAAM,AAClB,CAAC,AAED,EAAE,eAAC,CAAC,AACF,MAAM,CAAE,GAAG,CAAC,IAAI,AAClB,CAAC,AAED,QAAQ,eAAC,CAAC,AACR,OAAO,CAAE,KAAK,CACd,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CACxB,UAAU,CAAE,KAAK,CACjB,SAAS,CAAE,IAAI,CACf,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,GAAG,AACpB,CAAC"
}